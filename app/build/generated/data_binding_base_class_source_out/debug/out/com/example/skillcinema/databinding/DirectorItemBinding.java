// Generated by view binder compiler. Do not edit!
package com.example.skillcinema.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.skillcinema.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DirectorItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout itemDirector;

  @NonNull
  public final AppCompatTextView nameRu;

  @NonNull
  public final AppCompatImageView posterDirector;

  @NonNull
  public final AppCompatTextView professionKey;

  private DirectorItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout itemDirector, @NonNull AppCompatTextView nameRu,
      @NonNull AppCompatImageView posterDirector, @NonNull AppCompatTextView professionKey) {
    this.rootView = rootView;
    this.itemDirector = itemDirector;
    this.nameRu = nameRu;
    this.posterDirector = posterDirector;
    this.professionKey = professionKey;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DirectorItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DirectorItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.director_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DirectorItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout itemDirector = (ConstraintLayout) rootView;

      id = R.id.nameRu;
      AppCompatTextView nameRu = ViewBindings.findChildViewById(rootView, id);
      if (nameRu == null) {
        break missingId;
      }

      id = R.id.posterDirector;
      AppCompatImageView posterDirector = ViewBindings.findChildViewById(rootView, id);
      if (posterDirector == null) {
        break missingId;
      }

      id = R.id.professionKey;
      AppCompatTextView professionKey = ViewBindings.findChildViewById(rootView, id);
      if (professionKey == null) {
        break missingId;
      }

      return new DirectorItemBinding((ConstraintLayout) rootView, itemDirector, nameRu,
          posterDirector, professionKey);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
